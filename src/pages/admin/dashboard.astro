---
import Layout from '../../layouts/Layout.astro';
---

<Layout
	title="SEO Analytics Dashboard | Sacramento Fencing Co."
	description="Track ranking positions, traffic growth, leads, and conversions"
	canonicalUrl="/admin/dashboard">

	<section class="dashboard">
		<div class="container">
			<div class="dashboard-header">
				<h1>SEO Analytics Dashboard</h1>
				<div class="date-range">
					<label for="dateRange">Date Range:</label>
					<select id="dateRange">
						<option value="7">Last 7 Days</option>
						<option value="30" selected>Last 30 Days</option>
						<option value="90">Last 90 Days</option>
						<option value="365">Last Year</option>
					</select>
					<button id="refreshData" class="btn-refresh">‚Üª Refresh</button>
				</div>
			</div>

			<!-- Key Metrics Overview -->
			<div class="metrics-grid">
				<div class="metric-card">
					<div class="metric-icon">üìä</div>
					<div class="metric-content">
						<h3>Average Position</h3>
						<div class="metric-value" id="avgPosition">--</div>
						<div class="metric-change positive" id="positionChange">-- ‚Üë</div>
					</div>
				</div>

				<div class="metric-card">
					<div class="metric-icon">üëÅÔ∏è</div>
					<div class="metric-content">
						<h3>Organic Traffic</h3>
						<div class="metric-value" id="organicTraffic">--</div>
						<div class="metric-change" id="trafficChange">-- ‚Üë</div>
					</div>
				</div>

				<div class="metric-card">
					<div class="metric-icon">üìû</div>
					<div class="metric-content">
						<h3>Leads Generated</h3>
						<div class="metric-value" id="totalLeads">--</div>
						<div class="metric-change" id="leadsChange">-- ‚Üë</div>
					</div>
				</div>

				<div class="metric-card">
					<div class="metric-icon">üí∞</div>
					<div class="metric-content">
						<h3>Conversion Rate</h3>
						<div class="metric-value" id="conversionRate">--</div>
						<div class="metric-change" id="conversionChange">-- ‚Üë</div>
					</div>
				</div>
			</div>

			<!-- Ranking Positions -->
			<div class="section-card">
				<h2>Keyword Rankings</h2>
				<div class="search-filter">
					<input type="text" id="keywordSearch" placeholder="Search keywords...">
					<select id="locationFilter">
						<option value="all">All Locations</option>
						<option value="stockton">Stockton</option>
						<option value="tracy">Tracy</option>
						<option value="manteca">Manteca</option>
						<option value="lodi">Lodi</option>
						<option value="modesto">Modesto</option>
					</select>
				</div>
				<div class="table-container">
					<table id="rankingsTable">
						<thead>
							<tr>
								<th>Keyword</th>
								<th>Location</th>
								<th>Position</th>
								<th>Change</th>
								<th>Traffic</th>
								<th>Difficulty</th>
								<th>Trend</th>
							</tr>
						</thead>
						<tbody id="rankingsBody">
							<tr>
								<td colspan="7" class="loading">Loading ranking data...</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>

			<!-- Traffic Growth Chart -->
			<div class="section-card">
				<h2>Traffic Growth</h2>
				<div class="chart-container">
					<canvas id="trafficChart"></canvas>
				</div>
			</div>

			<!-- Lead Generation Tracking -->
			<div class="section-card">
				<h2>Lead Generation</h2>
				<div class="lead-stats">
					<div class="lead-source-grid">
						<div class="lead-source">
							<h4>Phone Calls</h4>
							<div class="lead-count" id="phoneCalls">--</div>
							<div class="lead-percentage" id="phonePercent">--</div>
						</div>
						<div class="lead-source">
							<h4>Contact Forms</h4>
							<div class="lead-count" id="formSubmits">--</div>
							<div class="lead-percentage" id="formPercent">--</div>
						</div>
						<div class="lead-source">
							<h4>Quote Requests</h4>
							<div class="lead-count" id="quoteRequests">--</div>
							<div class="lead-percentage" id="quotePercent">--</div>
						</div>
						<div class="lead-source">
							<h4>Chat Inquiries</h4>
							<div class="lead-count" id="chatInquiries">--</div>
							<div class="lead-percentage" id="chatPercent">--</div>
						</div>
					</div>
				</div>
				<div class="chart-container">
					<canvas id="leadsChart"></canvas>
				</div>
			</div>

			<!-- Competitor Analysis -->
			<div class="section-card">
				<h2>Competitor Movements</h2>
				<div class="competitor-grid">
					<div class="competitor-card">
						<h4>Top Competitor #1</h4>
						<div class="competitor-name" id="comp1Name">Loading...</div>
						<div class="competitor-stats">
							<div class="stat">
								<span>Avg Position:</span>
								<span id="comp1Position">--</span>
							</div>
							<div class="stat">
								<span>Keywords Ranking:</span>
								<span id="comp1Keywords">--</span>
							</div>
							<div class="stat">
								<span>Movement:</span>
								<span id="comp1Movement" class="movement">--</span>
							</div>
						</div>
					</div>

					<div class="competitor-card">
						<h4>Top Competitor #2</h4>
						<div class="competitor-name" id="comp2Name">Loading...</div>
						<div class="competitor-stats">
							<div class="stat">
								<span>Avg Position:</span>
								<span id="comp2Position">--</span>
							</div>
							<div class="stat">
								<span>Keywords Ranking:</span>
								<span id="comp2Keywords">--</span>
							</div>
							<div class="stat">
								<span>Movement:</span>
								<span id="comp2Movement" class="movement">--</span>
							</div>
						</div>
					</div>

					<div class="competitor-card">
						<h4>Top Competitor #3</h4>
						<div class="competitor-name" id="comp3Name">Loading...</div>
						<div class="competitor-stats">
							<div class="stat">
								<span>Avg Position:</span>
								<span id="comp3Position">--</span>
							</div>
							<div class="stat">
								<span>Keywords Ranking:</span>
								<span id="comp3Keywords">--</span>
							</div>
							<div class="stat">
								<span>Movement:</span>
								<span id="comp3Movement" class="movement">--</span>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- Location Performance -->
			<div class="section-card">
				<h2>Location Performance</h2>
				<div class="table-container">
					<table id="locationTable">
						<thead>
							<tr>
								<th>Location</th>
								<th>Page Views</th>
								<th>Leads</th>
								<th>Conversion Rate</th>
								<th>Avg Position</th>
								<th>Top Keywords</th>
							</tr>
						</thead>
						<tbody id="locationBody">
							<tr>
								<td colspan="6" class="loading">Loading location data...</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>

			<!-- Integration Setup -->
			<div class="section-card integration-setup">
				<h2>‚öôÔ∏è Analytics Integration Setup</h2>
				<div class="integration-info">
					<p>To see live data, connect your analytics tools:</p>
					<div class="integration-steps">
						<div class="step">
							<h4>1. Google Analytics 4</h4>
							<input type="text" id="gaPropertyId" placeholder="G-XXXXXXXXXX">
							<button class="btn-connect" onclick="connectGA()">Connect GA4</button>
						</div>
						<div class="step">
							<h4>2. Google Search Console</h4>
							<button class="btn-connect" onclick="connectGSC()">Authenticate GSC</button>
						</div>
						<div class="step">
							<h4>3. Call Tracking</h4>
							<input type="text" id="callTrackingKey" placeholder="API Key">
							<button class="btn-connect" onclick="connectCallTracking()">Connect</button>
						</div>
					</div>
				</div>
			</div>

		</div>
	</section>

	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script is:inline>
		// Sample data for demonstration
		const sampleRankings = [
			{ keyword: 'fence installation stockton', location: 'Stockton', position: 3, change: -2, traffic: 450, difficulty: 45, trend: 'up' },
			{ keyword: 'stockton fencing contractors', location: 'Stockton', position: 5, change: -1, traffic: 320, difficulty: 52, trend: 'up' },
			{ keyword: 'fence repair stockton ca', location: 'Stockton', position: 7, change: 0, traffic: 180, difficulty: 38, trend: 'stable' },
			{ keyword: 'tracy fence installation', location: 'Tracy', position: 4, change: -3, traffic: 290, difficulty: 41, trend: 'up' },
			{ keyword: 'modesto fencing company', location: 'Modesto', position: 8, change: -2, traffic: 210, difficulty: 48, trend: 'up' },
			{ keyword: 'lodi fence contractors', location: 'Lodi', position: 6, change: -1, traffic: 170, difficulty: 39, trend: 'up' },
			{ keyword: 'manteca fence repair', location: 'Manteca', position: 9, change: 0, traffic: 140, difficulty: 35, trend: 'stable' },
		];

		const locations = [
			{ name: 'Stockton', views: 2450, leads: 89, conversion: 3.6, position: 5.2, keywords: 'fence installation, fence repair' },
			{ name: 'Tracy', views: 1820, leads: 67, conversion: 3.7, position: 6.1, keywords: 'tracy fencing, fence install' },
			{ name: 'Manteca', views: 1340, leads: 52, conversion: 3.9, position: 7.3, keywords: 'manteca fence, fencing contractor' },
			{ name: 'Lodi', views: 980, leads: 38, conversion: 3.9, position: 6.8, keywords: 'lodi fence, wine country fence' },
			{ name: 'Modesto', views: 1560, leads: 54, conversion: 3.5, position: 8.2, keywords: 'modesto fencing, fence company' },
		];

		// Initialize metrics
		function updateMetrics() {
			document.getElementById('avgPosition').textContent = '5.8';
			document.getElementById('positionChange').textContent = '+2.3 ‚Üë';
			document.getElementById('positionChange').className = 'metric-change positive';

			document.getElementById('organicTraffic').textContent = '8,150';
			document.getElementById('trafficChange').textContent = '+23% ‚Üë';
			document.getElementById('trafficChange').className = 'metric-change positive';

			document.getElementById('totalLeads').textContent = '300';
			document.getElementById('leadsChange').textContent = '+18% ‚Üë';
			document.getElementById('leadsChange').className = 'metric-change positive';

			document.getElementById('conversionRate').textContent = '3.68%';
			document.getElementById('conversionChange').textContent = '+0.4% ‚Üë';
			document.getElementById('conversionChange').className = 'metric-change positive';
		}

		// Populate rankings table
		function populateRankings(data = sampleRankings) {
			const tbody = document.getElementById('rankingsBody');
			tbody.innerHTML = data.map(row => `
				<tr>
					<td class="keyword-cell">${row.keyword}</td>
					<td>${row.location}</td>
					<td class="position-badge position-${row.position <= 3 ? 'top' : row.position <= 10 ? 'good' : 'fair'}">#${row.position}</td>
					<td class="change-cell ${row.change < 0 ? 'positive' : row.change > 0 ? 'negative' : 'neutral'}">
						${row.change < 0 ? '‚Üë' : row.change > 0 ? '‚Üì' : '‚àí'} ${Math.abs(row.change)}
					</td>
					<td>${row.traffic}</td>
					<td><div class="difficulty-bar" style="width: ${row.difficulty}%">${row.difficulty}</div></td>
					<td><span class="trend-${row.trend}">${row.trend === 'up' ? 'üìà' : row.trend === 'down' ? 'üìâ' : '‚û°Ô∏è'}</span></td>
				</tr>
			`).join('');
		}

		// Populate location performance
		function populateLocations() {
			const tbody = document.getElementById('locationBody');
			tbody.innerHTML = locations.map(loc => `
				<tr>
					<td class="location-name">${loc.name}</td>
					<td>${loc.views.toLocaleString()}</td>
					<td>${loc.leads}</td>
					<td class="conversion-rate">${loc.conversion}%</td>
					<td class="position-value">${loc.position}</td>
					<td class="keywords-preview">${loc.keywords}</td>
				</tr>
			`).join('');
		}

		// Lead sources
		function updateLeadSources() {
			document.getElementById('phoneCalls').textContent = '142';
			document.getElementById('phonePercent').textContent = '47%';
			document.getElementById('formSubmits').textContent = '89';
			document.getElementById('formPercent').textContent = '30%';
			document.getElementById('quoteRequests').textContent = '52';
			document.getElementById('quotePercent').textContent = '17%';
			document.getElementById('chatInquiries').textContent = '17';
			document.getElementById('chatPercent').textContent = '6%';
		}

		// Competitor data
		function updateCompetitors() {
			document.getElementById('comp1Name').textContent = 'A1 Fence Company';
			document.getElementById('comp1Position').textContent = '4.2';
			document.getElementById('comp1Keywords').textContent = '23';
			document.getElementById('comp1Movement').textContent = '‚Üì 0.8';
			document.getElementById('comp1Movement').className = 'movement negative';

			document.getElementById('comp2Name').textContent = 'Best Fence Stockton';
			document.getElementById('comp2Position').textContent = '6.5';
			document.getElementById('comp2Keywords').textContent = '18';
			document.getElementById('comp2Movement').textContent = '‚Üë 1.2';
			document.getElementById('comp2Movement').className = 'movement positive';

			document.getElementById('comp3Name').textContent = 'Central Valley Fencing';
			document.getElementById('comp3Position').textContent = '7.8';
			document.getElementById('comp3Keywords').textContent = '15';
			document.getElementById('comp3Movement').textContent = '‚àí 0.0';
			document.getElementById('comp3Movement').className = 'movement neutral';
		}

		// Traffic chart
		function createTrafficChart() {
			const ctx = document.getElementById('trafficChart').getContext('2d');
			new Chart(ctx, {
				type: 'line',
				data: {
					labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
					datasets: [{
						label: 'Organic Traffic',
						data: [5200, 6100, 7300, 8150],
						borderColor: '#597B94',
						backgroundColor: 'rgba(89, 123, 148, 0.1)',
						tension: 0.4,
						fill: true
					}]
				},
				options: {
					responsive: true,
					maintainAspectRatio: false,
					plugins: {
						legend: { display: true }
					}
				}
			});
		}

		// Leads chart
		function createLeadsChart() {
			const ctx = document.getElementById('leadsChart').getContext('2d');
			new Chart(ctx, {
				type: 'bar',
				data: {
					labels: ['Phone', 'Forms', 'Quotes', 'Chat'],
					datasets: [{
						label: 'Leads by Source',
						data: [142, 89, 52, 17],
						backgroundColor: ['#597B94', '#E87C2E', '#CFB9A9', '#6B6B6B']
					}]
				},
				options: {
					responsive: true,
					maintainAspectRatio: false,
					plugins: {
						legend: { display: false }
					}
				}
			});
		}

		// Integration functions
		function connectGA() {
			const propertyId = document.getElementById('gaPropertyId').value;
			if (propertyId) {
				alert('GA4 connection would be established with: ' + propertyId + '\n\nThis requires backend API integration.');
			} else {
				alert('Please enter your GA4 Property ID (G-XXXXXXXXXX)');
			}
		}

		function connectGSC() {
			alert('Google Search Console authentication would open OAuth flow.\n\nThis requires backend API integration.');
		}

		function connectCallTracking() {
			const apiKey = document.getElementById('callTrackingKey').value;
			if (apiKey) {
				alert('Call tracking would be connected with API key.\n\nThis requires backend API integration.');
			} else {
				alert('Please enter your call tracking API key');
			}
		}

		// Search and filter
		document.getElementById('keywordSearch')?.addEventListener('input', (e) => {
			const search = e.target.value.toLowerCase();
			const dataSource = window.gscData || sampleRankings;
			const filtered = dataSource.filter(r => r.keyword.toLowerCase().includes(search));
			populateRankings(filtered);
		});

		document.getElementById('locationFilter')?.addEventListener('change', (e) => {
			const location = e.target.value;
			const dataSource = window.gscData || sampleRankings;
			const filtered = location === 'all' ? dataSource : dataSource.filter(r => r.location && r.location.toLowerCase() === location);
			populateRankings(filtered);
		});

		// Fetch real GSC data
		async function fetchGSCData(days = 30) {
			try {
				const endDate = new Date().toISOString().split('T')[0];
				const startDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString().split('T')[0];

				const response = await fetch(`/api/gsc?startDate=${startDate}&endDate=${endDate}&dimension=query`);
				const data = await response.json();

				if (data.success) {
					// Update metrics with real data
					document.getElementById('avgPosition').textContent = data.metrics.avgPosition;
					document.getElementById('organicTraffic').textContent = data.metrics.totalClicks.toLocaleString();

					// Update rankings table with real keywords
					const tbody = document.getElementById('rankingsBody');
					tbody.innerHTML = data.keywords.slice(0, 50).map(row => {
						const posNum = parseFloat(row.position);
						const posClass = posNum <= 3 ? 'top' : posNum <= 10 ? 'good' : 'fair';

						return `
							<tr>
								<td class="keyword-cell">${row.keyword}</td>
								<td>Multiple</td>
								<td class="position-badge position-${posClass}">#${row.position}</td>
								<td class="change-cell neutral">‚àí</td>
								<td>${row.clicks}</td>
								<td><div class="difficulty-bar" style="width: 50%">--</div></td>
								<td><span class="trend-stable">‚û°Ô∏è</span></td>
							</tr>
						`;
					}).join('');

					// Store data for filtering
					window.gscData = data.keywords;
				} else {
					console.error('GSC API Error:', data);
					showSetupInstructions(data);
				}
			} catch (error) {
				console.error('Failed to fetch GSC data:', error);
				// Fall back to sample data
				updateMetrics();
				populateRankings();
			}
		}

		// Show setup instructions if API not configured
		function showSetupInstructions(data) {
			const tbody = document.getElementById('rankingsBody');
			tbody.innerHTML = `
				<tr>
					<td colspan="7" class="loading">
						<div style="text-align: left; padding: 1rem;">
							<h3 style="color: #ef4444; margin-bottom: 1rem;">‚ö†Ô∏è Google Search Console Not Connected</h3>
							<p style="margin-bottom: 1rem;">${data.error || 'API not configured'}</p>
							<div style="background: #f3f4f6; padding: 1rem; border-radius: 5px; font-family: monospace; font-size: 0.9rem;">
								<strong>Setup Instructions:</strong><br><br>
								${data.setup ? Object.entries(data.setup).map(([key, value]) => `${key}: ${value}`).join('<br>') : 'Check .env configuration'}
							</div>
							<p style="margin-top: 1rem;"><em>Displaying sample data for demonstration...</em></p>
						</div>
					</td>
				</tr>
			`;

			// Show sample data after instructions
			setTimeout(() => {
				updateMetrics();
				populateRankings();
			}, 3000);
		}

		// Initialize on load
		document.addEventListener('DOMContentLoaded', () => {
			// Try to fetch real GSC data first
			fetchGSCData(30);

			// Initialize other sections with sample/placeholder data
			populateLocations();
			updateLeadSources();
			updateCompetitors();
			createTrafficChart();
			createLeadsChart();
		});

		// Update refresh button to fetch new data
		document.getElementById('refreshData')?.addEventListener('click', async () => {
			const dateRange = document.getElementById('dateRange').value;
			document.getElementById('rankingsBody').innerHTML = '<tr><td colspan="7" class="loading">Refreshing data...</td></tr>';
			await fetchGSCData(parseInt(dateRange));
		});
	</script>

</Layout>

<style>
	.dashboard {
		padding: 3rem 2rem;
		background: var(--background-light);
		min-height: 100vh;
	}

	.container {
		max-width: 1400px;
		margin: 0 auto;
	}

	.dashboard-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 2rem;
		flex-wrap: wrap;
		gap: 1rem;
	}

	.dashboard-header h1 {
		font-size: 2.5rem;
		color: var(--text-dark);
	}

	.date-range {
		display: flex;
		gap: 1rem;
		align-items: center;
	}

	.date-range select {
		padding: 0.5rem 1rem;
		border: 1px solid #ddd;
		border-radius: 5px;
		font-size: 1rem;
	}

	.btn-refresh {
		padding: 0.5rem 1rem;
		background: var(--primary-blue);
		color: white;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		font-size: 1rem;
		transition: background 0.3s;
	}

	.btn-refresh:hover {
		background: var(--secondary-blue);
	}

	.metrics-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 1.5rem;
		margin-bottom: 2rem;
	}

	.metric-card {
		background: white;
		padding: 1.5rem;
		border-radius: 10px;
		box-shadow: 0 2px 10px rgba(0,0,0,0.1);
		display: flex;
		gap: 1rem;
		align-items: center;
	}

	.metric-icon {
		font-size: 2.5rem;
	}

	.metric-content h3 {
		font-size: 0.9rem;
		color: var(--text-light);
		margin-bottom: 0.5rem;
	}

	.metric-value {
		font-size: 2rem;
		font-weight: bold;
		color: var(--text-dark);
		margin-bottom: 0.25rem;
	}

	.metric-change {
		font-size: 0.9rem;
		font-weight: 600;
	}

	.metric-change.positive {
		color: #10b981;
	}

	.metric-change.negative {
		color: #ef4444;
	}

	.section-card {
		background: white;
		padding: 2rem;
		border-radius: 10px;
		box-shadow: 0 2px 10px rgba(0,0,0,0.1);
		margin-bottom: 2rem;
	}

	.section-card h2 {
		font-size: 1.5rem;
		color: var(--text-dark);
		margin-bottom: 1.5rem;
	}

	.search-filter {
		display: flex;
		gap: 1rem;
		margin-bottom: 1rem;
	}

	.search-filter input,
	.search-filter select {
		padding: 0.5rem 1rem;
		border: 1px solid #ddd;
		border-radius: 5px;
		font-size: 1rem;
	}

	.search-filter input {
		flex: 1;
	}

	.table-container {
		overflow-x: auto;
	}

	table {
		width: 100%;
		border-collapse: collapse;
	}

	th {
		text-align: left;
		padding: 1rem;
		background: var(--background-light);
		color: var(--text-dark);
		font-weight: 600;
		border-bottom: 2px solid #ddd;
	}

	td {
		padding: 1rem;
		border-bottom: 1px solid #eee;
	}

	tr:hover {
		background: var(--background-light);
	}

	.keyword-cell {
		font-weight: 500;
		color: var(--primary-blue);
	}

	.position-badge {
		display: inline-block;
		padding: 0.25rem 0.75rem;
		border-radius: 20px;
		font-weight: 600;
	}

	.position-top {
		background: #10b981;
		color: white;
	}

	.position-good {
		background: #3b82f6;
		color: white;
	}

	.position-fair {
		background: #f59e0b;
		color: white;
	}

	.change-cell.positive {
		color: #10b981;
		font-weight: 600;
	}

	.change-cell.negative {
		color: #ef4444;
		font-weight: 600;
	}

	.change-cell.neutral {
		color: #6b7280;
	}

	.difficulty-bar {
		background: linear-gradient(90deg, #10b981, #f59e0b, #ef4444);
		color: white;
		padding: 0.25rem 0.5rem;
		border-radius: 3px;
		font-size: 0.85rem;
		text-align: center;
	}

	.chart-container {
		height: 300px;
		margin-top: 1rem;
	}

	.lead-source-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 1.5rem;
		margin-bottom: 2rem;
	}

	.lead-source {
		text-align: center;
		padding: 1.5rem;
		background: var(--background-light);
		border-radius: 10px;
	}

	.lead-source h4 {
		color: var(--text-light);
		margin-bottom: 1rem;
	}

	.lead-count {
		font-size: 2.5rem;
		font-weight: bold;
		color: var(--primary-blue);
		margin-bottom: 0.5rem;
	}

	.lead-percentage {
		color: var(--text-light);
		font-size: 1.1rem;
	}

	.competitor-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 1.5rem;
	}

	.competitor-card {
		padding: 1.5rem;
		background: var(--background-light);
		border-radius: 10px;
		border-left: 4px solid var(--accent-orange);
	}

	.competitor-card h4 {
		color: var(--text-light);
		margin-bottom: 0.5rem;
	}

	.competitor-name {
		font-size: 1.3rem;
		font-weight: 600;
		color: var(--text-dark);
		margin-bottom: 1rem;
	}

	.competitor-stats {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.competitor-stats .stat {
		display: flex;
		justify-content: space-between;
		padding: 0.5rem 0;
		border-bottom: 1px solid #ddd;
	}

	.movement.positive {
		color: #ef4444;
	}

	.movement.negative {
		color: #10b981;
	}

	.movement.neutral {
		color: #6b7280;
	}

	.location-name {
		font-weight: 600;
		color: var(--primary-blue);
	}

	.conversion-rate {
		color: #10b981;
		font-weight: 600;
	}

	.keywords-preview {
		font-size: 0.9rem;
		color: var(--text-light);
	}

	.integration-setup {
		background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-blue) 100%);
		color: white;
	}

	.integration-setup h2 {
		color: white;
	}

	.integration-info p {
		margin-bottom: 1.5rem;
		opacity: 0.9;
	}

	.integration-steps {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 1.5rem;
	}

	.step {
		background: rgba(255,255,255,0.1);
		padding: 1.5rem;
		border-radius: 10px;
	}

	.step h4 {
		margin-bottom: 1rem;
	}

	.step input {
		width: 100%;
		padding: 0.5rem;
		margin-bottom: 1rem;
		border: 1px solid rgba(255,255,255,0.3);
		border-radius: 5px;
		background: rgba(255,255,255,0.1);
		color: white;
	}

	.step input::placeholder {
		color: rgba(255,255,255,0.6);
	}

	.btn-connect {
		width: 100%;
		padding: 0.75rem;
		background: white;
		color: var(--primary-blue);
		border: none;
		border-radius: 5px;
		font-weight: 600;
		cursor: pointer;
		transition: all 0.3s;
	}

	.btn-connect:hover {
		background: var(--accent-orange);
		color: white;
	}

	.loading {
		text-align: center;
		padding: 2rem;
		color: var(--text-light);
	}

	@media (max-width: 768px) {
		.dashboard-header {
			flex-direction: column;
			align-items: flex-start;
		}

		.dashboard-header h1 {
			font-size: 2rem;
		}

		.metrics-grid {
			grid-template-columns: 1fr;
		}

		.search-filter {
			flex-direction: column;
		}

		table {
			font-size: 0.9rem;
		}

		th, td {
			padding: 0.75rem 0.5rem;
		}
	}
</style>
